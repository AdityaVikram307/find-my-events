{"version":3,"sources":["actions/types.js","components/events/Event.js","actions/eventActions.js","components/events/Events.js","components/layout/TextInputGroup.js","components/events/AddEvent.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","reducers/eventReducer.js","reducers/index.js","store.js","App.js","registerServiceWorker.js","index.js"],"names":["GET_EVENTS","ADD_EVENT","DELETE_EVENT","GET_EVENT","Event","state","showEventInfo","onDeleteClick","id","props","deleteEvent","this","event","name","date","time","duration","venue","description","contact","className","onClick","setState","style","cursor","float","color","bind","Component","connect","dispatch","a","axios","delete","type","payload","Events","getEvents","events","Fragment","map","get","res","data","TextInputGroup","label","value","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddEvent","errors","onSubmit","e","preventDefault","newEvent","addEvent","history","push","target","post","Header","branding","href","to","initialState","combineReducers","action","filter","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","App","exact","path","component","About","NotFound","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.9fcd5cd1.chunk.js","sourcesContent":["export const GET_EVENTS = 'GET_EVENTS';\r\nexport const ADD_EVENT = 'ADD_EVENT';\r\nexport const DELETE_EVENT = 'DELETE_EVENT';\r\nexport const GET_EVENT = 'GET_EVENT';\r\n\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { deleteEvent } from '../../actions/eventActions';\r\n\r\nclass Event extends Component {\r\n  state = {\r\n    showEventInfo: false\r\n  };\r\n\r\n  onDeleteClick = id => {\r\n    this.props.deleteEvent(id);\r\n  };\r\n\r\n  render() {\r\n    const { id, name, date, time, duration, venue, description, contact } = this.props.event;\r\n    const { showEventInfo } = this.state;\r\n\r\n    return (\r\n      <div className=\"card card-body mb-3\">\r\n        <h4>\r\n          {name}{' '}\r\n          <i\r\n            onClick={() =>\r\n              this.setState({\r\n                showEventInfo: !this.state.showEventInfo\r\n              })\r\n            }\r\n            className=\"fas fa-sort-down\"\r\n            style={{ cursor: 'pointer' }}\r\n          />\r\n          <i\r\n            className=\"fas fa-times\"\r\n            style={{ cursor: 'pointer', float: 'right', color: 'red' }}\r\n            onClick={this.onDeleteClick.bind(this, id)}\r\n          />\r\n          \r\n        </h4>\r\n        {showEventInfo ? (\r\n          <ul className=\"list-group\">\r\n            <li className=\"list-group-item\">Date: {date}</li>\r\n            <li className=\"list-group-item\">Time: {time}</li>\r\n            <li className=\"list-group-item\">Duration: {duration}</li>\r\n            <li className=\"list-group-item\">Venue: {venue}</li>\r\n            <li className=\"list-group-item\">Description: {description}</li>\r\n            <li className=\"list-group-item\">Contact: {contact}</li>\r\n          </ul>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nEvent.propTypes = {\r\n  event: PropTypes.object.isRequired,\r\n  deleteEvent: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteEvent }\r\n)(Event);\r\n","import {\r\n    GET_EVENTS,\r\n    ADD_EVENT,\r\n    DELETE_EVENT,\r\n    GET_EVENT\r\n  } from './types';\r\n  import axios from 'axios';\r\n  \r\n  export const getEvents = () => async dispatch => {\r\n    const res = await axios.get('https://my-json-server.typicode.com/AdityaVikram307/mockjson/events');\r\n  \r\n    dispatch({\r\n      type: GET_EVENTS,\r\n      payload: res.data\r\n    });\r\n  };\r\n  \r\n  export const getEvent = id => async dispatch => {\r\n    const res = await axios.get(\r\n      `https://my-json-server.typicode.com/AdityaVikram307/mockjson/events/${id}`\r\n    );\r\n  \r\n    dispatch({\r\n      type: GET_EVENT,\r\n      payload: res.data\r\n    });\r\n  };\r\n  \r\n  export const addEvent = event => async dispatch => {\r\n    const res = await axios.post(\r\n      `https://my-json-server.typicode.com/AdityaVikram307/mockjson/events/`,\r\n      event\r\n    );\r\n  \r\n    dispatch({\r\n      type: ADD_EVENT,\r\n      payload: res.data\r\n    });\r\n  };\r\n  \r\n  export const deleteEvent = id => async dispatch => {\r\n    try {\r\n      await axios.delete(`https://my-json-server.typicode.com/AdityaVikram307/mockjson/events/${id}`);\r\n  \r\n      dispatch({\r\n        type: DELETE_EVENT,\r\n        payload: id\r\n      });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: DELETE_EVENT,\r\n        payload: id\r\n      });\r\n    }\r\n  };\r\n  \r\n  \r\n  ","import React, { Component } from 'react';\r\nimport Event from './Event';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getEvents } from '../../actions/eventActions';\r\n\r\nclass Events extends Component {\r\n  componentDidMount() {\r\n    this.props.getEvents();\r\n  }\r\n\r\n  render() {\r\n    const { events } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <h1 className=\"display-4 mb-2\">\r\n          <span className=\"text-primary\">Events</span> List\r\n        </h1>\r\n        {events.map(event => (\r\n          <Event key={event.id} event={event} />\r\n        ))}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nEvents.propTypes = {\r\n  events: PropTypes.array.isRequired,\r\n  getEvents: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  events: state.event.events\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getEvents }\r\n)(Events);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text'\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addEvent } from '../../actions/eventActions';\r\n\r\nclass AddEvent extends Component {\r\n  state = {\r\n    name: '',\r\n    date: '',\r\n    time: '',\r\n    duration: '',\r\n    venue: '',\r\n    description: '',\r\n    contact: '',\r\n    errors: {}\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { name, date, time, duration, venue, description, contact } = this.state;\r\n\r\n    // Check For Errors\r\n    if (name === '') {\r\n      this.setState({ errors: { name: 'Name is required' } });\r\n      return;\r\n    }\r\n\r\n    if (date === '') {\r\n      this.setState({ errors: { date: 'Date is required' } });\r\n      return;\r\n    }\r\n\r\n    if (time === '') {\r\n      this.setState({ errors: { time: 'Time is required' } });\r\n      return;\r\n    }\r\n\r\n    if (venue === '') {\r\n      this.setState({ errors: { venue: 'Please Specify a Venue' } });\r\n      return;\r\n    }\r\n\r\n    if (description === '') {\r\n      this.setState({ errors: { description: 'Please Provide Apt Description' } });\r\n      return;\r\n    }\r\n\r\n    if (contact === '') {\r\n        this.setState({ errors: { contact: 'Please Provide Contact Number' } });\r\n        return;\r\n      }\r\n\r\n    const newEvent = {\r\n      name,\r\n      date,\r\n      time,\r\n      duration,\r\n      venue,\r\n      description,\r\n      contact\r\n    };\r\n\r\n    this.props.addEvent(newEvent);\r\n\r\n    // Clear State\r\n    this.setState({\r\n      name: '',\r\n      date: '',\r\n      time: '',\r\n      duration: '',\r\n      venue: '',\r\n      description: '',\r\n      contact: '',\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, date, time, duration, venue, description, contact, errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"card mb-3\">\r\n        <div className=\"card-header\">Add an Event</div>\r\n        <div className=\"card-body\">\r\n          <form onSubmit={this.onSubmit}>\r\n            <TextInputGroup\r\n              label=\"Name\"\r\n              name=\"name\"\r\n              placeholder=\"Enter Name\"\r\n              value={name}\r\n              onChange={this.onChange}\r\n              error={errors.name}\r\n            />\r\n            <TextInputGroup\r\n              label=\"Date\"\r\n              name=\"date\"\r\n              type=\"text\"\r\n              placeholder=\"Enter Date\"\r\n              value={date}\r\n              onChange={this.onChange}\r\n              error={errors.date}\r\n            />\r\n            <TextInputGroup\r\n              label=\"Time\"\r\n              name=\"time\"\r\n              placeholder=\"Enter Time\"\r\n              value={time}\r\n              onChange={this.onChange}\r\n              error={errors.time}\r\n            />\r\n            <TextInputGroup\r\n              label=\"Duration\"\r\n              name=\"duration\"\r\n              placeholder=\"Enter Duration\"\r\n              value={duration}\r\n              onChange={this.onChange}\r\n              error={errors.duration}\r\n            />\r\n            <TextInputGroup\r\n              label=\"Venue\"\r\n              name=\"venue\"\r\n              placeholder=\"Enter Venue\"\r\n              value={venue}\r\n              onChange={this.onChange}\r\n              error={errors.venue}\r\n            />\r\n            <TextInputGroup\r\n              label=\"Description\"\r\n              name=\"description\"\r\n              placeholder=\"Enter Description\"\r\n              value={description}\r\n              onChange={this.onChange}\r\n              error={errors.description}\r\n            />\r\n            <TextInputGroup\r\n              label=\"Contact\"\r\n              name=\"contact\"\r\n              type=\"number\"\r\n              placeholder=\"Enter Contact Number\"\r\n              value={contact}\r\n              onChange={this.onChange}\r\n              error={errors.contact}\r\n            />\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Add Event\"\r\n              className=\"btn btn-light btn-block\"\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddEvent.propTypes = {\r\n  addEvent: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { addEvent }\r\n)(AddEvent);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\" /> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/event/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\" /> Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\" /> About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: 'My App'\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Find My Events</h1>\r\n      <p className=\"lead\">Simple app to create, view and delete Events</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404</span> Page Not Found\r\n      </h1>\r\n      <p className=\"lead\">Sorry, that page does not exist</p>\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n    GET_EVENTS,\r\n    ADD_EVENT,\r\n    DELETE_EVENT,\r\n    GET_EVENT\r\n  } from '../actions/types';\r\n  \r\n  const initialState = {\r\n    events: [],\r\n    event: {}\r\n  };\r\n  \r\n  export default function(state = initialState, action) {\r\n    switch (action.type) {\r\n      case GET_EVENTS:\r\n        return {\r\n          ...state,\r\n          events: action.payload\r\n        };\r\n      case GET_EVENT:\r\n        return {\r\n          ...state,\r\n          event: action.payload\r\n        };\r\n      case ADD_EVENT:\r\n        return {\r\n          ...state,\r\n          events: [action.payload, ...state.events]\r\n        };\r\n      case DELETE_EVENT:\r\n        return {\r\n          ...state,\r\n          events: state.events.filter(\r\n            event => event.id !== action.payload\r\n          )\r\n        };\r\n      \r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","import { combineReducers } from 'redux';\r\nimport eventReducer from './eventReducer';\r\n\r\nexport default combineReducers({\r\n  event: eventReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Events from './components/events/Events';\nimport AddEvent from './components/events/AddEvent';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Find My Events\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Events} />\n                <Route exact path=\"/event/add\" component={AddEvent} />\n                <Route exact path=\"/about\" component={About} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.1/8 is considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export default function register() {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Lets check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not local host. Just register service worker\r\n          registerValidSW(swUrl);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the old content will have been purged and\r\n                // the fresh content will have been added to the cache.\r\n                // It's the perfect time to display a \"New content is\r\n                // available; please refresh.\" message in your web app.\r\n                console.log('New content is available; please refresh.');\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        if (\r\n          response.status === 404 ||\r\n          response.headers.get('content-type').indexOf('javascript') === -1\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister();\r\n      });\r\n    }\r\n  }\r\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();"],"sourceRoot":""}